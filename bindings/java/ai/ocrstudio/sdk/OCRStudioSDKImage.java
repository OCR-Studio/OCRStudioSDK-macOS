/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ai.ocrstudio.sdk;

import ai.ocrstudio.sdk.*;

public class OCRStudioSDKImage {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public OCRStudioSDKImage(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(OCRStudioSDKImage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(OCRStudioSDKImage obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jniocrstudiosdkJNI.delete_OCRStudioSDKImage(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static int PagesCount(String filename) {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_PagesCount(filename);
  }

  public static OCRStudioSDKString PageName(String filename, int page_number) {
    return new OCRStudioSDKString(jniocrstudiosdkJNI.OCRStudioSDKImage_PageName(filename, page_number), true);
  }

  public static OCRStudioSDKImage CreateEmpty() {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateEmpty();
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFile(String filename, int page_number, int max_width, int max_height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFile__SWIG_0(filename, page_number, max_width, max_height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFile(String filename, int page_number, int max_width) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFile__SWIG_1(filename, page_number, max_width);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFile(String filename, int page_number) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFile__SWIG_2(filename, page_number);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFile(String filename) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFile__SWIG_3(filename);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFileBuffer(byte[] data, int page_number, int max_width, int max_height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFileBuffer__SWIG_0(data, page_number, max_width, max_height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFileBuffer(byte[] data, int page_number, int max_width) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFileBuffer__SWIG_1(data, page_number, max_width);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFileBuffer(byte[] data, int page_number) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFileBuffer__SWIG_2(data, page_number);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromFileBuffer(byte[] data) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromFileBuffer__SWIG_3(data);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromBase64FileBuffer(String base64_data, int page_number, int max_width, int max_height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromBase64FileBuffer__SWIG_0(base64_data, page_number, max_width, max_height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromBase64FileBuffer(String base64_data, int page_number, int max_width) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromBase64FileBuffer__SWIG_1(base64_data, page_number, max_width);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromBase64FileBuffer(String base64_data, int page_number) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromBase64FileBuffer__SWIG_2(base64_data, page_number);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromBase64FileBuffer(String base64_data) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromBase64FileBuffer__SWIG_3(base64_data);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromPixelBuffer(byte[] data, int width, int height, int bytes_per_line, int bytes_per_channel, OCRStudioSDKPixelFormat pixel_format) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromPixelBuffer(data, width, height, bytes_per_line, bytes_per_channel, pixel_format.swigValue());
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromBuffer(byte[] data, int width, int height, int bytes_per_line, int channels) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromBuffer(data, width, height, bytes_per_line, channels);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, false);
  }

  public static OCRStudioSDKImage CreateFromYUVSimple(byte[] yuv_data, int width, int height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromYUVSimple(yuv_data, width, height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public static OCRStudioSDKImage CreateFromYUV(byte[] y_plane, int y_plane_row_stride, int y_plane_pixel_stride, byte[] u_plane, int u_plane_row_stride, int u_plane_pixel_stride, byte[] v_plane, int v_plane_row_stride, int v_plane_pixel_stride, int width, int height, OCRStudioSDKYUVFormat yuv_format) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_CreateFromYUV(y_plane, y_plane_row_stride, y_plane_pixel_stride, u_plane, u_plane_row_stride, u_plane_pixel_stride, v_plane, v_plane_row_stride, v_plane_pixel_stride, width, height, yuv_format.swigValue());
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public OCRStudioSDKImage DeepCopy() {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_DeepCopy(swigCPtr, this);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public OCRStudioSDKImage ShallowCopy() {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_ShallowCopy(swigCPtr, this);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public void Clear() {
    jniocrstudiosdkJNI.OCRStudioSDKImage_Clear(swigCPtr, this);
  }

  public int ExportPixelBufferLength() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_ExportPixelBufferLength(swigCPtr, this);
  }

  public int ExportPixelBuffer(byte[] export_buffer) {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_ExportPixelBuffer(swigCPtr, this, export_buffer);
  }

  public OCRStudioSDKString ExportBase64JPEG() {
    return new OCRStudioSDKString(jniocrstudiosdkJNI.OCRStudioSDKImage_ExportBase64JPEG(swigCPtr, this), true);
  }

  public void Scale(int width, int height) {
    jniocrstudiosdkJNI.OCRStudioSDKImage_Scale(swigCPtr, this, width, height);
  }

  public OCRStudioSDKImage DeepCopyScaled(int width, int height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_DeepCopyScaled(swigCPtr, this, width, height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public void CropByQuad(String quad_json, int width, int height) {
    jniocrstudiosdkJNI.OCRStudioSDKImage_CropByQuad(swigCPtr, this, quad_json, width, height);
  }

  public OCRStudioSDKImage DeepCopyCroppedByQuad(String quad_json, int width, int height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_DeepCopyCroppedByQuad(swigCPtr, this, quad_json, width, height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public void CropByRect(int x, int y, int width, int height) {
    jniocrstudiosdkJNI.OCRStudioSDKImage_CropByRect(swigCPtr, this, x, y, width, height);
  }

  public OCRStudioSDKImage DeepCopyCroppedByRect(int x, int y, int width, int height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_DeepCopyCroppedByRect(swigCPtr, this, x, y, width, height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public OCRStudioSDKImage ShallowCopyCroppedByRect(int x, int y, int width, int height) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_ShallowCopyCroppedByRect(swigCPtr, this, x, y, width, height);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public void RotateByNinety(int num_rotations) {
    jniocrstudiosdkJNI.OCRStudioSDKImage_RotateByNinety(swigCPtr, this, num_rotations);
  }

  public OCRStudioSDKImage DeepCopyRotatedByNinety(int num_rotations) {
    long cPtr = jniocrstudiosdkJNI.OCRStudioSDKImage_DeepCopyRotatedByNinety(swigCPtr, this, num_rotations);
    return (cPtr == 0) ? null : new OCRStudioSDKImage(cPtr, true);
  }

  public int Width() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_Width(swigCPtr, this);
  }

  public int Height() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_Height(swigCPtr, this);
  }

  public int BytesPerLine() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_BytesPerLine(swigCPtr, this);
  }

  public int Channels() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_Channels(swigCPtr, this);
  }

  public boolean OwnsPixelData() {
    return jniocrstudiosdkJNI.OCRStudioSDKImage_OwnsPixelData(swigCPtr, this);
  }

  public void ForcePixelDataOwnership() {
    jniocrstudiosdkJNI.OCRStudioSDKImage_ForcePixelDataOwnership(swigCPtr, this);
  }

}
